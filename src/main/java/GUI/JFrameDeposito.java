package GUI;

import GUI.dialogs.JDialogAgregarRepuesto;
import GUI.dialogs.JDialogEditarRepuesto;
import entities.Repuesto;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import services.RepuestoServ;
import util.ColorRenderTables;
import util.VerificadorCampos;

public class JFrameDeposito extends javax.swing.JFrame {

    private final RepuestoServ repuestoServ = new RepuestoServ();

    //constantes para tabla
    private final String COL_COD_BARRA = "COD BARRA";
    private final String COL_DETALLE = "DETALLE";
    private final String COL_MARCA = "MARCA";
    private final String COL_PRECIO = "PRECIO";
    private final String COL_CANTI_STOCK = "CANTIDAD STOCK";
    private final String COL_STOCK_MIN = "STOCK MÍNIMO";

    private final VerificadorCampos verificadorCampos = new VerificadorCampos();

    private final DefaultTableModel tabla = new DefaultTableModel(new Object[]{
        COL_COD_BARRA, COL_DETALLE, COL_MARCA, COL_PRECIO, COL_CANTI_STOCK, COL_STOCK_MIN}, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // ninguna celda editable
        }
    };

    private List<Repuesto> listaParaTabla;

    /**
     * Creates new form JFrameDeposito
     */
    public JFrameDeposito() {
        initComponents();

        ////MÉTODOS CUANDO SE INICIA LA VENTANA
        setTabla();
        listaParaTabla = repuestoServ.todosRepuestos();
        llenaTabla(listaParaTabla);
        gestionaAvisoStock();
        jcbStockNormal.setSelected(true);
        jcbStockBajo.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButActualizar = new javax.swing.JButton();
        jButAgregarRepuesto = new javax.swing.JButton();
        jButModificar = new javax.swing.JButton();
        jButEliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButNotaRetiro = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButBuscarRepuesto = new javax.swing.JButton();
        jtfBuscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxBuscar = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRepuestos = new javax.swing.JTable();
        jLabelExistenciaStock = new javax.swing.JLabel();
        jcbStockBajo = new javax.swing.JCheckBox();
        jcbStockNormal = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Depósito");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButActualizar.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButActualizar.setText("Actualizar Tabla");
        jButActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButActualizarActionPerformed(evt);
            }
        });

        jButAgregarRepuesto.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButAgregarRepuesto.setText("Agregar Repuesto");
        jButAgregarRepuesto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButAgregarRepuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAgregarRepuestoActionPerformed(evt);
            }
        });

        jButModificar.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButModificar.setText("Modificar Repuesto");
        jButModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButModificarActionPerformed(evt);
            }
        });

        jButEliminar.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButEliminar.setText("Borrar Repuesto");
        jButEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButEliminarActionPerformed(evt);
            }
        });

        jLabel1.setText("EN DESARROLLO");

        jButNotaRetiro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButNotaRetiro.setText("Nueva Nota de Retiro");
        jButNotaRetiro.setEnabled(false);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(5, 0));

        jButBuscarRepuesto.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButBuscarRepuesto.setText("Buscar Repuesto");
        jButBuscarRepuesto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButBuscarRepuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButBuscarRepuestoActionPerformed(evt);
            }
        });

        jtfBuscar.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Buscar por:");

        jComboBoxBuscar.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        jComboBoxBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código de barras", "Detalle" }));
        jComboBoxBuscar.setBorder(null);
        jComboBoxBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTableRepuestos.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        jTableRepuestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableRepuestos.setToolTipText("Tabla de Repuestos");
        jTableRepuestos.setShowHorizontalLines(true);
        jTableRepuestos.setShowVerticalLines(true);
        jScrollPane1.setViewportView(jTableRepuestos);

        jLabelExistenciaStock.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        jLabelExistenciaStock.setText("*Existen productos con stock debajo del mínimo.");

        jcbStockBajo.setText("Buscar stock bajo.");

        jcbStockNormal.setText("Buscar stock normal.");

        jMenuBar1.setBorder(null);
        jMenuBar1.setName(""); // NOI18N

        jMenu1.setText("Ventana");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButNotaRetiro, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButActualizar)
                    .addComponent(jButAgregarRepuesto)
                    .addComponent(jButModificar)
                    .addComponent(jButEliminar)
                    .addComponent(jLabel1))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1003, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButBuscarRepuesto, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jtfBuscar))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelExistenciaStock)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxBuscar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbStockNormal)
                            .addComponent(jcbStockBajo))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jComboBoxBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10))
                            .addComponent(jcbStockNormal, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButBuscarRepuesto)
                            .addComponent(jLabelExistenciaStock)
                            .addComponent(jcbStockBajo))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jButAgregarRepuesto)
                        .addGap(10, 10, 10)
                        .addComponent(jButModificar)
                        .addGap(10, 10, 10)
                        .addComponent(jButEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButNotaRetiro))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButAgregarRepuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAgregarRepuestoActionPerformed
        JDialogAgregarRepuesto jdiaRep = new JDialogAgregarRepuesto(this, true);
        jdiaRep.setVisible(true);

    }//GEN-LAST:event_jButAgregarRepuestoActionPerformed

    private void jButBuscarRepuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButBuscarRepuestoActionPerformed
        String input = jtfBuscar.getText().trim();
        int seleccion = jComboBoxBuscar.getSelectedIndex();
        try {
            verificadorCampos.verificarVacio(input, "Búsqueda");
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "HAY CAMPOS OBLIGATORIOS VACÍOS",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        boolean stockNormal = jcbStockNormal.isSelected();
        boolean stockBajo = jcbStockBajo.isSelected();
        if (stockNormal || stockBajo) {
            listaParaTabla = repuestoServ.buscarConFiltros(input, seleccion, stockNormal, stockBajo);
        }
        tabla.setRowCount(0);
        llenaTabla(listaParaTabla);
    }//GEN-LAST:event_jButBuscarRepuestoActionPerformed

    private void jButActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButActualizarActionPerformed
        boolean stockNormal = jcbStockNormal.isSelected();
        boolean stockBajo = jcbStockBajo.isSelected();
        if (stockNormal || stockBajo) {
            listaParaTabla = repuestoServ.buscarConFiltros(null, null, stockNormal, stockBajo);
        } else {
            listaParaTabla.clear();
        }
        jtfBuscar.setText("");
        tabla.setRowCount(0);
        llenaTabla(listaParaTabla);
        gestionaAvisoStock();
    }//GEN-LAST:event_jButActualizarActionPerformed

    private void jButModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButModificarActionPerformed
        int filaParaModificar = jTableRepuestos.getSelectedRow();
        if (filaParaModificar == -1) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado un repuesto.", "DEBE SELECCIONAR UN REPUESTO",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String codBarra = jTableRepuestos.getValueAt(filaParaModificar, 0).toString();
        JDialogEditarRepuesto jDialogEditarRepuesto = new JDialogEditarRepuesto(this, true);
        jDialogEditarRepuesto.setCodBarra(codBarra);
        jDialogEditarRepuesto.setVisible(true);
    }//GEN-LAST:event_jButModificarActionPerformed

    private void jButEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButEliminarActionPerformed

        int filaParaModificar = jTableRepuestos.getSelectedRow();
        if (filaParaModificar == -1) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado un repuesto.", "DEBE SELECCIONAR UN REPUESTO",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String codBarra = jTableRepuestos.getValueAt(filaParaModificar, 0).toString();
        Repuesto repuestoBorrar = repuestoServ.buscarPorCodBarraExacto(codBarra);
        //CONFIRMACIÓN
        int respuesta = JOptionPane.showConfirmDialog(null,
                "Esta a punto de borrar un repuesto, esta acción es irreversible. ¿Continuar?",
                "CONFIRMACIÓN DE BORRADO", JOptionPane.WARNING_MESSAGE);
        if (respuesta == JOptionPane.YES_OPTION) {
            int respuesta2 = JOptionPane.showConfirmDialog(null,
                    "Confirmar eliminación de " + repuestoBorrar.getDetalle(),
                    "CONFIRMACIÓN DE BORRADO", JOptionPane.WARNING_MESSAGE);
            if (respuesta2 == JOptionPane.YES_OPTION) {
                repuestoServ.borrarRepuesto(repuestoBorrar);
            }
        }

    }//GEN-LAST:event_jButEliminarActionPerformed

    private void gestionaAvisoStock() {
        if (repuestoServ.cuentaRespBajoStock() > 0) {
            jLabelExistenciaStock.setVisible(true);
        } else {
            jLabelExistenciaStock.setVisible(false);
        }
    }

    private void setTabla() {
        jTableRepuestos = new JTable(tabla);
        jScrollPane1.setViewportView(jTableRepuestos);
    }

    private void llenaTabla(List<Repuesto> listaParaLlenar) {
        listaParaLlenar.forEach(repuesto -> {
            tabla.addRow(new Object[]{
                repuesto.getCodBarra(),
                repuesto.getDetalle(),
                repuesto.getMarca(),
                "$ " + repuesto.getPrecio(),
                repuesto.getStock().getCantidad(),
                repuesto.getStock().getCantMinima()
            });
        });

        //aplica render para colorear filas según condición
        ColorRenderTables renderer = new ColorRenderTables((table, row) -> {
            Object stocActu = table.getValueAt(row, 4);
            Object stockMin = table.getValueAt(row, 5);
            if (stocActu instanceof Integer && stockMin instanceof Integer) {
                int actual = (int) stocActu;
                int minimo = (int) stockMin;
                return actual <= minimo;
            }
            return false;
        },
                new Color(255, 170, 170));
        for (int col = 0; col < tabla.getColumnCount(); col++) {
            jTableRepuestos.getColumnModel().getColumn(col).setCellRenderer(renderer);
        }

        //PARA CENTRAR DATOS DE TABLA
        //TO-DO: MIGRAR PARA LA CLASE DEL RENDER
        // Crear renderer que centra el contenido
        /*
        DefaultTableCellRenderer centrado = new DefaultTableCellRenderer();
        centrado.setHorizontalAlignment(SwingConstants.CENTER);

        // Aplicar el renderer a todas las columnas
        for (int i = 0; i < jTableRepuestos.getColumnCount(); i++) {
            jTableRepuestos.getColumnModel().getColumn(i).setCellRenderer(centrado);
        }*/
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameDeposito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameDeposito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameDeposito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameDeposito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameDeposito().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButActualizar;
    private javax.swing.JButton jButAgregarRepuesto;
    private javax.swing.JButton jButBuscarRepuesto;
    private javax.swing.JButton jButEliminar;
    private javax.swing.JButton jButModificar;
    private javax.swing.JButton jButNotaRetiro;
    private javax.swing.JComboBox<String> jComboBoxBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelExistenciaStock;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableRepuestos;
    private javax.swing.JCheckBox jcbStockBajo;
    private javax.swing.JCheckBox jcbStockNormal;
    private javax.swing.JTextField jtfBuscar;
    // End of variables declaration//GEN-END:variables
}
