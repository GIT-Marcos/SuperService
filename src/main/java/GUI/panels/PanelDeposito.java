package GUI.panels;

import GUI.JFrameHome;
import GUI.dialogs.JDialogCrearRepuesto;
import GUI.dialogs.JDialogEditarRepuesto;
import entities.Repuesto;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import services.RepuestoServ;
import util.ColorRenderTables;
import util.VerificadorCampos;

public class PanelDeposito extends javax.swing.JPanel {

    private JFrameHome home;

    private final RepuestoServ repuestoServ = new RepuestoServ();

    //constantes para tabla
    private final String COL_COD_BARRA = "COD BARRA";
    private final String COL_DETALLE = "DETALLE";
    private final String COL_MARCA = "MARCA";
    private final String COL_PRECIO = "PRECIO";
    private final String COL_CANTI_STOCK = "CANTIDAD STOCK";
    private final String COL_STOCK_MIN = "STOCK MÍNIMO";

    private final DefaultTableModel tabla = new DefaultTableModel(new Object[]{
        COL_COD_BARRA, COL_DETALLE, COL_MARCA, COL_PRECIO, COL_CANTI_STOCK, COL_STOCK_MIN}, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // ninguna celda editable
        }
    };

    private final VerificadorCampos verificadorCampos = new VerificadorCampos();

    private List<Repuesto> listaParaTabla = new ArrayList<>();

    public PanelDeposito() {
        initComponents();
    }

    public PanelDeposito(JFrameHome home) {
        initComponents();
        this.home = home;

        ////MÉTODOS CUANDO SE INICIA LA VENTANA
        setTabla();
        listaParaTabla = repuestoServ.todosRepuestos();
        llenaTabla(listaParaTabla);
        gestionaAvisoStock();
        jcbStockNormal.setSelected(true);
        jcbStockBajo.setSelected(true);

    }

    private void setTabla() {
        jTableRepuestos = new JTable(tabla);
        jScrollPane1.setViewportView(jTableRepuestos);
    }

    private void llenaTabla(List<Repuesto> listaParaLlenar) {
        listaParaLlenar.forEach(repuesto -> {
            tabla.addRow(new Object[]{
                repuesto.getCodBarra(),
                repuesto.getDetalle(),
                repuesto.getMarca(),
                "$ " + repuesto.getPrecio(),
                repuesto.getStock().getCantidad(),
                repuesto.getStock().getCantMinima()
            });
        });

        //aplica render para colorear filas según condición
        ColorRenderTables renderer = new ColorRenderTables((table, row) -> {
            Object stocActu = table.getValueAt(row, 4);
            Object stockMin = table.getValueAt(row, 5);
            if (stocActu instanceof Integer && stockMin instanceof Integer) {
                int actual = (int) stocActu;
                int minimo = (int) stockMin;
                return actual <= minimo;
            }
            return false;
        },
                new Color(255, 170, 170));
        for (int col = 0; col < tabla.getColumnCount(); col++) {
            jTableRepuestos.getColumnModel().getColumn(col).setCellRenderer(renderer);
        }

        //PARA CENTRAR DATOS DE TABLA
        //TO-DO: MIGRAR PARA LA CLASE DEL RENDER
        // Crear renderer que centra el contenido
        /*
        DefaultTableCellRenderer centrado = new DefaultTableCellRenderer();
        centrado.setHorizontalAlignment(SwingConstants.CENTER);

        // Aplicar el renderer a todas las columnas
        for (int i = 0; i < jTableRepuestos.getColumnCount(); i++) {
            jTableRepuestos.getColumnModel().getColumn(i).setCellRenderer(centrado);
        }*/
    }

    private void gestionaAvisoStock() {
        if (repuestoServ.cuentaRespBajoStock() > 0) {
            jLabelExistenciaStock.setVisible(true);
        } else {
            jLabelExistenciaStock.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 590), new java.awt.Dimension(0, 590), new java.awt.Dimension(32767, 590));
        jPanel1 = new javax.swing.JPanel();
        jtfBuscar = new javax.swing.JTextField();
        jButBuscarRepuesto = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxBuscar = new javax.swing.JComboBox<>();
        jLabelExistenciaStock = new javax.swing.JLabel();
        jcbStockNormal = new javax.swing.JCheckBox();
        jcbStockBajo = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRepuestos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButActualizar = new javax.swing.JButton();
        jButAgregarRepuesto = new javax.swing.JButton();
        jButModificar = new javax.swing.JButton();
        jButEliminar = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButIngresarStock = new javax.swing.JButton();
        jButGenerarcsv = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        filler1.setBackground(new java.awt.Color(255, 51, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jtfBuscar.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N

        jButBuscarRepuesto.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButBuscarRepuesto.setText("Buscar repuesto");
        jButBuscarRepuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButBuscarRepuestoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Buscar por:");

        jComboBoxBuscar.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxBuscar.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        jComboBoxBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código de barras", "Detalle", "Marca" }));

        jLabelExistenciaStock.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jLabelExistenciaStock.setForeground(new java.awt.Color(0, 0, 0));
        jLabelExistenciaStock.setText("*Existen repuestos con stock bajo");
        jLabelExistenciaStock.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 51), 1, true));

        jcbStockNormal.setBackground(new java.awt.Color(255, 255, 255));
        jcbStockNormal.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        jcbStockNormal.setForeground(new java.awt.Color(0, 0, 0));
        jcbStockNormal.setText("Mostrar stock normal");

        jcbStockBajo.setBackground(new java.awt.Color(255, 255, 255));
        jcbStockBajo.setFont(new java.awt.Font("Malgun Gothic", 0, 14)); // NOI18N
        jcbStockBajo.setForeground(new java.awt.Color(0, 0, 0));
        jcbStockBajo.setText("Mostrar stock bajo");

        jTableRepuestos.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        jTableRepuestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableRepuestos.setToolTipText("Tabla de Repuestos");
        jTableRepuestos.setShowHorizontalLines(true);
        jTableRepuestos.setShowVerticalLines(true);
        jScrollPane1.setViewportView(jTableRepuestos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButBuscarRepuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelExistenciaStock)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbStockNormal)
                            .addComponent(jcbStockBajo))
                        .addGap(291, 291, 291))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBoxBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButBuscarRepuesto))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jcbStockNormal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelExistenciaStock)
                            .addComponent(jcbStockBajo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));

        jButActualizar.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButActualizar.setText("Todos los repuestos");
        jButActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButActualizarActionPerformed(evt);
            }
        });

        jButAgregarRepuesto.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButAgregarRepuesto.setText("Nuevo repuesto");
        jButAgregarRepuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAgregarRepuestoActionPerformed(evt);
            }
        });

        jButModificar.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButModificar.setText("Modificar repuesto");
        jButModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButModificarActionPerformed(evt);
            }
        });

        jButEliminar.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButEliminar.setText("Borrar repuesto");
        jButEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButEliminarActionPerformed(evt);
            }
        });

        jButton5.setText("Nueva nota de retiro");
        jButton5.setEnabled(false);

        jButton1.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButIngresarStock.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButIngresarStock.setText("Ingresar stock");
        jButIngresarStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButIngresarStockActionPerformed(evt);
            }
        });

        jButGenerarcsv.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        jButGenerarcsv.setText("Imprimir lista");
        jButGenerarcsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButGenerarcsvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButAgregarRepuesto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButIngresarStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButGenerarcsv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButAgregarRepuesto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButIngresarStock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButGenerarcsv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filler1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButActualizarActionPerformed
        boolean stockNormal = jcbStockNormal.isSelected();
        boolean stockBajo = jcbStockBajo.isSelected();
        if (stockNormal || stockBajo) {
            listaParaTabla = repuestoServ.buscarConFiltros(null, null, stockNormal, stockBajo);
        } else {
            listaParaTabla.clear();
        }
        jtfBuscar.setText("");
        tabla.setRowCount(0);
        llenaTabla(listaParaTabla);
        gestionaAvisoStock();
    }//GEN-LAST:event_jButActualizarActionPerformed

    private void jButAgregarRepuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAgregarRepuestoActionPerformed
        JDialogCrearRepuesto jdiaRep = new JDialogCrearRepuesto(home, true);
        jdiaRep.setVisible(true);
    }//GEN-LAST:event_jButAgregarRepuestoActionPerformed

    private void jButModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButModificarActionPerformed
        int filaParaModificar = jTableRepuestos.getSelectedRow();
        if (filaParaModificar == -1) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado un repuesto de la tabla.",
                    "DEBE SELECCIONAR UN REPUESTO",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String codBarra = jTableRepuestos.getValueAt(filaParaModificar, 0).toString();
        JDialogEditarRepuesto jDialogEditarRepuesto = new JDialogEditarRepuesto(home, true);
        jDialogEditarRepuesto.setCodBarra(codBarra);
        jDialogEditarRepuesto.setVisible(true);
    }//GEN-LAST:event_jButModificarActionPerformed

    private void jButEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButEliminarActionPerformed
        int filaParaModificar = jTableRepuestos.getSelectedRow();
        if (filaParaModificar == -1) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado un repuesto.", "DEBE SELECCIONAR UN REPUESTO",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String codBarra = jTableRepuestos.getValueAt(filaParaModificar, 0).toString();
        Repuesto repuestoBorrar = repuestoServ.buscarPorCodBarraExacto(codBarra);
        //CONFIRMACIÓN
        int respuesta = JOptionPane.showConfirmDialog(null,
                "Esta a punto de borrar un repuesto, esta acción es irreversible. ¿Continuar?",
                "CONFIRMACIÓN DE BORRADO", JOptionPane.WARNING_MESSAGE);
        if (respuesta == JOptionPane.YES_OPTION) {
            int respuesta2 = JOptionPane.showConfirmDialog(null,
                    "Confirmar eliminación de " + repuestoBorrar.getDetalle(),
                    "CONFIRMACIÓN DE BORRADO", JOptionPane.WARNING_MESSAGE);
            if (respuesta2 == JOptionPane.YES_OPTION) {
                repuestoServ.borrarRepuesto(repuestoBorrar);
                JOptionPane.showMessageDialog(null, "Repuesto eliminado correctamente.",
                        "ELIMINACIÓN DE REPUESTO", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButEliminarActionPerformed

    private void jButBuscarRepuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButBuscarRepuestoActionPerformed
        String input = jtfBuscar.getText().trim();
        int seleccionComboBox = jComboBoxBuscar.getSelectedIndex();
        try {
            verificadorCampos.verificarVacio(input, "Búsqueda");
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "HAY CAMPOS OBLIGATORIOS VACÍOS",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        boolean stockNormalCheckBox = jcbStockNormal.isSelected();
        boolean stockBajoCheckBox = jcbStockBajo.isSelected();
        if (stockNormalCheckBox || stockBajoCheckBox) {
            listaParaTabla = repuestoServ.buscarConFiltros(input,
                    seleccionComboBox, stockNormalCheckBox, stockBajoCheckBox);
        }
        tabla.setRowCount(0);
        llenaTabla(listaParaTabla);
    }//GEN-LAST:event_jButBuscarRepuestoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        home.mostrarPanel("panelOpciones");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButIngresarStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButIngresarStockActionPerformed
        
        
        
    }//GEN-LAST:event_jButIngresarStockActionPerformed

    private void jButGenerarcsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButGenerarcsvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButGenerarcsvActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButActualizar;
    private javax.swing.JButton jButAgregarRepuesto;
    private javax.swing.JButton jButBuscarRepuesto;
    private javax.swing.JButton jButEliminar;
    private javax.swing.JButton jButGenerarcsv;
    private javax.swing.JButton jButIngresarStock;
    private javax.swing.JButton jButModificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBoxBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelExistenciaStock;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRepuestos;
    private javax.swing.JCheckBox jcbStockBajo;
    private javax.swing.JCheckBox jcbStockNormal;
    private javax.swing.JTextField jtfBuscar;
    // End of variables declaration//GEN-END:variables
}
