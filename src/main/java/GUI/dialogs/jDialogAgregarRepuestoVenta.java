package GUI.dialogs;

import entities.Repuesto;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import services.RepuestoServ;
import util.ColorRenderTables;
import util.VerificadorCampos;

/**
 *
 * @author Usuario
 */
public class jDialogAgregarRepuestoVenta extends javax.swing.JDialog {

    //constantes para tabla
    private final String COL_COD_BARRA = "COD BARRA";
    private final String COL_DETALLE = "DETALLE";
    private final String COL_MARCA = "MARCA";
    private final String COL_PRECIO = "PRECIO";
    private final String COL_CANTI_STOCK = "CANTIDAD STOCK";
    private final String COL_STOCK_MIN = "STOCK MÍNIMO";

    private final DefaultTableModel tabla = new DefaultTableModel(new Object[]{
        COL_COD_BARRA, COL_DETALLE, COL_MARCA, COL_PRECIO, COL_CANTI_STOCK, COL_STOCK_MIN}, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // ninguna celda editable
        }
    };

    private final VerificadorCampos verificadorCampos = new VerificadorCampos();

    private final RepuestoServ repuestoServ = new RepuestoServ();

    private List<Repuesto> listaParaTabla = new ArrayList<>();

    private JDialogNuevaVenta jDialogNuevaVenta;

    public jDialogAgregarRepuestoVenta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public jDialogAgregarRepuestoVenta(java.awt.Frame parent, boolean modal, JDialogNuevaVenta jDialogNuevaVenta) {
        super(parent, modal);
        initComponents();

        this.jDialogNuevaVenta = jDialogNuevaVenta;

        jComboBoxBuscar.setSelectedIndex(1);
        setTabla();
        listaParaTabla = repuestoServ.todosRepuestos();
        llenaTabla(listaParaTabla);
    }

    private void setTabla() {
        jTableRepuestos = new JTable(tabla);
        jScrollPane1.setViewportView(jTableRepuestos);
    }

    private void llenaTabla(List<Repuesto> listaParaLlenar) {
        listaParaLlenar.forEach(repuesto -> {
            tabla.addRow(new Object[]{
                repuesto.getCodBarra(),
                repuesto.getDetalle(),
                repuesto.getMarca(),
                "$ " + repuesto.getPrecio(),
                repuesto.getStock().getCantidad(),
                repuesto.getStock().getCantMinima()
            });
        });

        //aplica render para colorear filas según condición
        ColorRenderTables renderer = new ColorRenderTables((table, row) -> {
            Object stocActu = table.getValueAt(row, 4);
            Object stockMin = table.getValueAt(row, 5);
            if (stocActu instanceof Integer && stockMin instanceof Integer) {
                int actual = (int) stocActu;
                int minimo = (int) stockMin;
                return actual <= minimo;
            }
            return false;
        },
                new Color(255, 170, 170));
        for (int col = 0; col < tabla.getColumnCount(); col++) {
            jTableRepuestos.getColumnModel().getColumn(col).setCellRenderer(renderer);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtfBuscar = new javax.swing.JTextField();
        jComboBoxBuscar = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRepuestos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButAgregar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jtfCantidad = new javax.swing.JTextField();
        jcbMostrarStockBajo = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar un repuesto a la venta");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jComboBoxBuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código de barras", "Detalle" }));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Buscar por:");

        jButBuscar.setText("BUSCAR");
        jButBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButBuscarActionPerformed(evt);
            }
        });

        jTableRepuestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableRepuestos.setShowGrid(true);
        jScrollPane1.setViewportView(jTableRepuestos);

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("BUSQUE EL REPUESTO A AGREGAR EN LA VENTA");

        jButAgregar.setText("AGREGAR");
        jButAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAgregarActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Indique cantidad a vender:");

        jcbMostrarStockBajo.setBackground(new java.awt.Color(255, 255, 255));
        jcbMostrarStockBajo.setForeground(new java.awt.Color(0, 0, 0));
        jcbMostrarStockBajo.setSelected(true);
        jcbMostrarStockBajo.setText("Mostrar repuestos con stock bajo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(jcbMostrarStockBajo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButBuscar)
                    .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbMostrarStockBajo)
                    .addComponent(jComboBoxBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButBuscarActionPerformed
        String input = jtfBuscar.getText().trim();
        boolean stockBajoCheckBox = jcbMostrarStockBajo.isSelected();
        int seleccionComboBox = jComboBoxBuscar.getSelectedIndex();
        try {
            verificadorCampos.verificarVacio(input, "Búsqueda");
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "HAY CAMPOS OBLIGATORIOS VACÍOS",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        //true xq siempre se veran los activos
        listaParaTabla = repuestoServ.buscarConFiltros(input, seleccionComboBox, true, stockBajoCheckBox);
        tabla.setRowCount(0);
        llenaTabla(listaParaTabla);
    }//GEN-LAST:event_jButBuscarActionPerformed

    private void jButAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAgregarActionPerformed
        if (jTableRepuestos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No ha seleccionado un repuesto de la tabla.",
                    "DEBE SELECCIONAR UN REPUESTO",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            verificadorCampos.verificarVacio(jtfCantidad.getText().trim(), jLabel4.getText());
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "HAY CAMPOS OBLIGATORIOS VACÍOS",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            verificadorCampos.verificaLargo(jtfCantidad.getText().trim(), 12, jLabel4.getText());
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "CAMPOS MUY LARGOS", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            verificadorCampos.verificaFormatoInteger(jtfCantidad.getText().trim(), jLabel4.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "HAY CAMPOS NUMÉRICOS EN MAL FORMATO",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        Integer cantidad = Integer.valueOf(jtfCantidad.getText().trim());
        String codBarraSeleccionTabla = jTableRepuestos.getValueAt(
                jTableRepuestos.getSelectedRow(), 0).toString();
        if (codBarraSeleccionTabla == null) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un repuesto de la tabla"
                    + " para agregarlo a la venta.", "ATENCIÓN",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        Repuesto repuesto = repuestoServ.buscarPorCodBarraExacto(codBarraSeleccionTabla);
        if (cantidad >= repuesto.getStock().getCantidad()) {
            JOptionPane.showMessageDialog(null,
                    "La cantidad que quiere vender es mayor o igual que el existente del repuesto",
                    "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (jDialogNuevaVenta.getAgregados().contains(repuesto.getId())) {
            JOptionPane.showMessageDialog(null,
                    "El repuesto " + repuesto.getDetalle() + " ya ha sido agregado para la venta",
                    "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
        } else {
            jDialogNuevaVenta.recibeRepuesto(repuesto, cantidad);
            JOptionPane.showMessageDialog(null, "Repuesto agregado para venta correctamente.",
                        "VENTA DE REPUESTO", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }
    }//GEN-LAST:event_jButAgregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jDialogAgregarRepuestoVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jDialogAgregarRepuestoVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jDialogAgregarRepuestoVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jDialogAgregarRepuestoVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jDialogAgregarRepuestoVenta dialog = new jDialogAgregarRepuestoVenta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButAgregar;
    private javax.swing.JButton jButBuscar;
    private javax.swing.JComboBox<String> jComboBoxBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRepuestos;
    private javax.swing.JCheckBox jcbMostrarStockBajo;
    private javax.swing.JTextField jtfBuscar;
    private javax.swing.JTextField jtfCantidad;
    // End of variables declaration//GEN-END:variables
}
